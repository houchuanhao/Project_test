/*
`timescale 1 ps/ 1 ps
module p1_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg clk;
reg rstn;
// wires                                               
wire [3:0]  cnt;
wire cout;

// assign statements (if any)                          
p1 i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.cnt(cnt),
	.cout(cout),
	.rstn(rstn)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
	clk=1'b0;
	rstn=1'b0;
	#51;
	rstn=1'b1;
	#5100;
	rstn=1'b0;
// --> end                                             
$display("Running testbench");                       
end                                                    
always     
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin
	#10;
	clk=~clk;
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
//@eachvec;                                              
// --> end                                             
end                                                    
endmodule
*/
`timescale 1 ps/ 1 ps
module p1_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg A;
reg B;
reg Ci;
reg clk;
reg rstn;
// wires                                               
wire C0;
wire S;

// assign statements (if any)                          
p1 i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.B(B),
	.C0(C0),
	.Ci(Ci),
	.S(S),
	.clk(clk),
	.rstn(rstn)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
	clk=1'b0;
	rstn=1'b0;
	#51;
	rstn=1'b1;
	A=1'b1;
	B=1'b1;
	Ci=1'b0;	
// --> end                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
    #10;
	clk=~clk;                                                   
//@eachvec;                                              
// --> end                                             
end                                                    
endmodule


